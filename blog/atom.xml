<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://MFSRoblox.github.io/ArcaneumFramework/blog</id>
    <title>Arcaneum Framework Blog</title>
    <updated>2022-05-02T09:50:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://MFSRoblox.github.io/ArcaneumFramework/blog"/>
    <subtitle>Arcaneum Framework Blog</subtitle>
    <entry>
        <title type="html"><![CDATA[Progress Report 2]]></title>
        <id>PR2</id>
        <link href="https://MFSRoblox.github.io/ArcaneumFramework/blog/PR2"/>
        <updated>2022-05-02T09:50:00.000Z</updated>
        <summary type="html"><![CDATA[Finally figured out the required logic to get the TestInfoInterface to throw a warning if the metamethod wasn't "overriden." Currently writing tests for this, considering how fundamental datatypes are (and hopefully will be).]]></summary>
        <content type="html"><![CDATA[<p>Finally figured out the required logic to get the TestInfoInterface to throw a warning if the metamethod wasn&#x27;t &quot;overriden.&quot; Currently writing tests for this, considering how fundamental datatypes are (and hopefully will be).</p><p>I realized that the perspective modules (Server and Client) don&#x27;t exactly have the best &quot;AddOn&quot; functionality, and the &quot;Shared&quot; environment variables in each perspective run the risk of accidentally putting the modules into the Global Module, which would be bad for the Server especially. This is next on the to-do list.</p><p>Time&#x27;s going pretty fast. It&#x27;s hard to describe how to use this framework, I need to find an outside perspective that&#x27;s willing to work with me on documenting the usage. Considering the upcoming deadline for tests, I&#x27;m not sure if I&#x27;ll be able to get everything that I want done. Technically this framework is in a working state, so perhaps some of the features could be cut in favor of getting something done for my presentation.</p>]]></content>
        <author>
            <name>Leo Yu Lee</name>
            <uri>https://github.com/leoyulee</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Progress Report 1]]></title>
        <id>PR1</id>
        <link href="https://MFSRoblox.github.io/ArcaneumFramework/blog/PR1"/>
        <updated>2022-04-27T06:30:00.000Z</updated>
        <summary type="html"><![CDATA[I added some more functionality to ClassService so any new classes made outside of the framework can be added into it without much hastle (and still be able to be referenced in a logical way).]]></summary>
        <content type="html"><![CDATA[<p>I added some more functionality to ClassService so any new classes made outside of the framework can be added into it without much hastle (and still be able to be referenced in a logical way).</p><p>I&#x27;ll have to experiment with this more, and test these new changes.</p><p>However, for this to work, I needed to add a &quot;self reference&quot; for each of the classes, of which adds a new property under every class called &quot;CoreModule.&quot; I updated each class version, and found that although the version system was useful, it was sadly hindered by the fact that all of my <code>CheckVersion</code>s weren&#x27;t written in the same way so Ctrl-F could find them all. Thus I made all of them uniform, such that it follows the format of <code>\n (ClassName):CheckVersion()</code>. It made more changes A LOT easier from that point on. After this, I added the ParentClass argument to <!-- -->[ClassService:AddClassModule]<!-- --> and a new helper function of <!-- -->[ClassService:SetClassParent]<!-- -->, under the case that a module would need to be moved again for whatever reason. I also added an &quot;AddOn&quot; section for the ClassService if a new module doesn&#x27;t exactly belong under a class, but also doesn&#x27;t belong under anything else outside of a class.</p>]]></content>
        <author>
            <name>Leo Yu Lee</name>
            <uri>https://github.com/leoyulee</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[First Post]]></title>
        <id>firstpost</id>
        <link href="https://MFSRoblox.github.io/ArcaneumFramework/blog/firstpost"/>
        <updated>2022-04-26T01:00:00.000Z</updated>
        <summary type="html"><![CDATA[Hey! This is my first post!]]></summary>
        <content type="html"><![CDATA[<p>Hey! This is my first post!</p><p>The next step I need to take for this framework to reach the &quot;complete state&quot; is the ability to add your own classes, datatypes, and services to the framework without needing to make a forked version. I plan on doing this by expanding upon the ClassService and the core Arcaneum module with methods that allow this to happen.</p>]]></content>
        <author>
            <name>Leo Yu Lee</name>
            <uri>https://github.com/leoyulee</uri>
        </author>
    </entry>
</feed>